var _MichaelCombs28$elm_mdl$Material_Toggles$group = function (s) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (options) {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					group: _elm_lang$core$Maybe$Just(
						_elm_lang$html$Html_Attributes$name(s))
				});
		});
};
var _MichaelCombs28$elm_mdl$Material_Toggles$value = function (b) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (options) {
			return _elm_lang$core$Native_Utils.update(
				options,
				{value: b});
		});
};
var _MichaelCombs28$elm_mdl$Material_Toggles$disabled = _MichaelCombs28$elm_mdl$Material_Options$set(
	function (options) {
		return _elm_lang$core$Native_Utils.update(
			options,
			{isDisabled: true});
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$ripple = _MichaelCombs28$elm_mdl$Material_Options$set(
	function (options) {
		return _elm_lang$core$Native_Utils.update(
			options,
			{ripple: true});
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$onClick = function (x) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (options) {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					onClick: _elm_lang$core$Maybe$Just(
						A2(
							_elm_lang$html$Html_Events$on,
							'change',
							_elm_lang$core$Json_Decode$succeed(x)))
				});
		});
};
var _MichaelCombs28$elm_mdl$Material_Toggles$defaultConfig = {
	isDisabled: false,
	value: false,
	ripple: false,
	group: _elm_lang$core$Maybe$Nothing,
	onClick: _elm_lang$core$Maybe$Nothing,
	inner: {ctor: '[]'}
};
var _MichaelCombs28$elm_mdl$Material_Toggles$defaultModel = {ripple: _MichaelCombs28$elm_mdl$Material_Ripple$model, isFocused: false};
var _MichaelCombs28$elm_mdl$Material_Toggles$Model = F2(
	function (a, b) {
		return {ripple: a, isFocused: b};
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$Config = F6(
	function (a, b, c, d, e, f) {
		return {isDisabled: a, value: b, ripple: c, group: d, onClick: e, inner: f};
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$SetFocus = function (a) {
	return {ctor: 'SetFocus', _0: a};
};
var _MichaelCombs28$elm_mdl$Material_Toggles$Ripple = function (a) {
	return {ctor: 'Ripple', _0: a};
};
var _MichaelCombs28$elm_mdl$Material_Toggles$update = F2(
	function (action, model) {
		var _p0 = action;
		if (_p0.ctor === 'Ripple') {
			return A2(
				_MichaelCombs28$elm_mdl$Material_Helpers$map2nd,
				_elm_lang$core$Platform_Cmd$map(_MichaelCombs28$elm_mdl$Material_Toggles$Ripple),
				A2(
					_MichaelCombs28$elm_mdl$Material_Helpers$map1st,
					function (r) {
						return _elm_lang$core$Native_Utils.update(
							model,
							{ripple: r});
					},
					A2(_MichaelCombs28$elm_mdl$Material_Ripple$update, _p0._0, model.ripple)));
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{isFocused: _p0._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$render = function (view) {
	return A5(
		_MichaelCombs28$elm_parts$Parts$create,
		view,
		_MichaelCombs28$elm_parts$Parts$generalize(_MichaelCombs28$elm_mdl$Material_Toggles$update),
		function (_) {
			return _.toggles;
		},
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.update(
					y,
					{toggles: x});
			}),
		_MichaelCombs28$elm_mdl$Material_Toggles$defaultModel);
};
var _MichaelCombs28$elm_mdl$Material_Toggles$top = F5(
	function (lift, group, model, summary, elems) {
		var cfg = summary.config;
		return A5(
			_MichaelCombs28$elm_mdl$Material_Options$apply,
			summary,
			_elm_lang$html$Html$label,
			{
				ctor: '::',
				_0: _MichaelCombs28$elm_mdl$Material_Options$cs(
					A2(_elm_lang$core$Basics_ops['++'], 'mdl-', group)),
				_1: {
					ctor: '::',
					_0: _MichaelCombs28$elm_mdl$Material_Options$cs(
						A2(_elm_lang$core$Basics_ops['++'], 'mdl-js-', group)),
					_1: {
						ctor: '::',
						_0: A2(
							_MichaelCombs28$elm_mdl$Material_Options$when,
							_MichaelCombs28$elm_mdl$Material_Options$cs('mdl-js-ripple-effect'),
							cfg.ripple),
						_1: {
							ctor: '::',
							_0: A2(
								_MichaelCombs28$elm_mdl$Material_Options$when,
								_MichaelCombs28$elm_mdl$Material_Options$cs('mdl-js-ripple-effect--ignore-events'),
								cfg.ripple),
							_1: {
								ctor: '::',
								_0: _MichaelCombs28$elm_mdl$Material_Options$cs('is-upgraded'),
								_1: {
									ctor: '::',
									_0: A2(
										_MichaelCombs28$elm_mdl$Material_Options$when,
										_MichaelCombs28$elm_mdl$Material_Options$cs('is-checked'),
										cfg.value),
									_1: {
										ctor: '::',
										_0: A2(
											_MichaelCombs28$elm_mdl$Material_Options$when,
											_MichaelCombs28$elm_mdl$Material_Options$cs('is-focused'),
											model.isFocused),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: _MichaelCombs28$elm_mdl$Material_Helpers$blurOn('mouseup'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onFocus(
						lift(
							_MichaelCombs28$elm_mdl$Material_Toggles$SetFocus(true))),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onBlur(
							lift(
								_MichaelCombs28$elm_mdl$Material_Toggles$SetFocus(false))),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$core$Maybe$withDefault, _MichaelCombs28$elm_mdl$Material_Helpers$noAttr, cfg.onClick),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			_elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: elems,
					_1: {
						ctor: '::',
						_0: cfg.ripple ? {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$map,
								function (_p1) {
									return lift(
										_MichaelCombs28$elm_mdl$Material_Toggles$Ripple(_p1));
								},
								A2(
									_MichaelCombs28$elm_mdl$Material_Ripple$view,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('mdl-switch__ripple-container mdl-js-ripple-effect mdl-ripple--center'),
										_1: {ctor: '[]'}
									},
									model.ripple)),
							_1: {ctor: '[]'}
						} : {ctor: '[]'},
						_1: {ctor: '[]'}
					}
				}));
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$viewCheckbox = F4(
	function (lift, model, config, elems) {
		var summary = A2(_MichaelCombs28$elm_mdl$Material_Options$collect, _MichaelCombs28$elm_mdl$Material_Toggles$defaultConfig, config);
		var cfg = summary.config;
		return A5(
			_MichaelCombs28$elm_mdl$Material_Toggles$top,
			lift,
			'checkbox',
			model,
			summary,
			{
				ctor: '::',
				_0: A4(
					_MichaelCombs28$elm_mdl$Material_Options$styled_,
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-checkbox__input'),
						_1: {
							ctor: '::',
							_0: _MichaelCombs28$elm_mdl$Material_Options$many(cfg.inner),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$disabled(cfg.isDisabled),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$checked(cfg.value),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('mdl-checkbox__label'),
							_1: {ctor: '[]'}
						},
						elems),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('mdl-checkbox__focus-helper'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('mdl-checkbox__box-outline'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('mdl-checkbox__tick-outline'),
											_1: {ctor: '[]'}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$checkbox = _MichaelCombs28$elm_mdl$Material_Toggles$render(_MichaelCombs28$elm_mdl$Material_Toggles$viewCheckbox);
var _MichaelCombs28$elm_mdl$Material_Toggles$viewSwitch = F4(
	function (lift, model, config, elems) {
		var summary = A2(_MichaelCombs28$elm_mdl$Material_Options$collect, _MichaelCombs28$elm_mdl$Material_Toggles$defaultConfig, config);
		var cfg = summary.config;
		return A5(
			_MichaelCombs28$elm_mdl$Material_Toggles$top,
			lift,
			'switch',
			model,
			summary,
			{
				ctor: '::',
				_0: A4(
					_MichaelCombs28$elm_mdl$Material_Options$styled_,
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-switch__input'),
						_1: {
							ctor: '::',
							_0: _MichaelCombs28$elm_mdl$Material_Options$many(cfg.inner),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$disabled(cfg.isDisabled),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$checked(cfg.value),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('mdl-switch__label'),
							_1: {ctor: '[]'}
						},
						elems),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('mdl-switch__track'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('mdl-switch__thumb'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('mdl-switch__focus-helper'),
											_1: {ctor: '[]'}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$switch = _MichaelCombs28$elm_mdl$Material_Toggles$render(_MichaelCombs28$elm_mdl$Material_Toggles$viewSwitch);
var _MichaelCombs28$elm_mdl$Material_Toggles$viewRadio = F4(
	function (lift, model, config, elems) {
		var summary = A2(_MichaelCombs28$elm_mdl$Material_Options$collect, _MichaelCombs28$elm_mdl$Material_Toggles$defaultConfig, config);
		var cfg = summary.config;
		return A5(
			_MichaelCombs28$elm_mdl$Material_Toggles$top,
			lift,
			'radio',
			model,
			summary,
			{
				ctor: '::',
				_0: A4(
					_MichaelCombs28$elm_mdl$Material_Options$styled_,
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-radio__button'),
						_1: {
							ctor: '::',
							_0: _MichaelCombs28$elm_mdl$Material_Options$many(cfg.inner),
							_1: {ctor: '[]'}
						}
					},
					A2(
						_elm_lang$core$List$filterMap,
						_elm_lang$core$Basics$identity,
						{
							ctor: '::',
							_0: _elm_lang$core$Maybe$Just(
								_elm_lang$html$Html_Attributes$type_('radio')),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Maybe$Just(
									_elm_lang$html$Html_Attributes$disabled(cfg.isDisabled)),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Maybe$Just(
										_elm_lang$html$Html_Attributes$checked(cfg.value)),
									_1: {
										ctor: '::',
										_0: cfg.group,
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('mdl-radio__label'),
							_1: {ctor: '[]'}
						},
						elems),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('mdl-radio__outer-circle'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('mdl-radio__inner-circle'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _MichaelCombs28$elm_mdl$Material_Toggles$radio = _MichaelCombs28$elm_mdl$Material_Toggles$render(_MichaelCombs28$elm_mdl$Material_Toggles$viewRadio);
