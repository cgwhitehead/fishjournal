var _MichaelCombs28$elm_mdl$Material_Chip$hasValue = function (m) {
	var _p0 = m;
	if (_p0.ctor === 'Just') {
		return true;
	} else {
		return false;
	}
};
var _MichaelCombs28$elm_mdl$Material_Chip$renderItem = function (item) {
	var _p1 = item;
	switch (_p1.ctor) {
		case 'Contact':
			return A3(
				_MichaelCombs28$elm_mdl$Material_Options$styled,
				_p1._0,
				{
					ctor: '::',
					_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip__contact'),
					_1: _p1._1
				},
				_p1._2);
		case 'Text':
			return A3(
				_MichaelCombs28$elm_mdl$Material_Options$styled,
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip__text'),
					_1: _p1._0
				},
				_p1._1);
		default:
			return A3(
				_MichaelCombs28$elm_mdl$Material_Options$styled,
				_p1._0,
				{
					ctor: '::',
					_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip__action'),
					_1: _p1._1
				},
				_p1._2);
	}
};
var _MichaelCombs28$elm_mdl$Material_Chip$priority = function (item) {
	var _p2 = item;
	switch (_p2.ctor) {
		case 'Contact':
			return 0;
		case 'Text':
			return 1;
		default:
			return 2;
	}
};
var _MichaelCombs28$elm_mdl$Material_Chip$on = F2(
	function (event, decoder) {
		return _MichaelCombs28$elm_mdl$Material_Options$set(
			function (config) {
				return _elm_lang$core$Native_Utils.update(
					config,
					{
						listeners: A2(
							_elm_lang$core$Basics_ops['++'],
							config.listeners,
							{
								ctor: '::',
								_0: A2(_elm_lang$html$Html_Events$on, event, decoder),
								_1: {ctor: '[]'}
							})
					});
			});
	});
var _MichaelCombs28$elm_mdl$Material_Chip$onClick = function (msg) {
	return A2(
		_MichaelCombs28$elm_mdl$Material_Chip$on,
		'click',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _MichaelCombs28$elm_mdl$Material_Chip$deleteClick = function (msg) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (config) {
			return _elm_lang$core$Native_Utils.update(
				config,
				{
					deleteClick: _elm_lang$core$Maybe$Just(
						A3(
							_elm_lang$html$Html_Events$onWithOptions,
							'click',
							{stopPropagation: true, preventDefault: true},
							_elm_lang$core$Json_Decode$succeed(msg)))
				});
		});
};
var _MichaelCombs28$elm_mdl$Material_Chip$deleteLink = function (link) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (config) {
			return _elm_lang$core$Native_Utils.update(
				config,
				{
					deleteLink: _elm_lang$core$Maybe$Just(
						_elm_lang$html$Html_Attributes$href(link))
				});
		});
};
var _MichaelCombs28$elm_mdl$Material_Chip$deleteIcon = function (icon) {
	return _MichaelCombs28$elm_mdl$Material_Options$set(
		function (config) {
			return _elm_lang$core$Native_Utils.update(
				config,
				{
					deleteIcon: _elm_lang$core$Maybe$Just(icon)
				});
		});
};
var _MichaelCombs28$elm_mdl$Material_Chip$defaultConfig = {
	deleteIcon: _elm_lang$core$Maybe$Nothing,
	deleteLink: _elm_lang$core$Maybe$Nothing,
	deleteClick: _elm_lang$core$Maybe$Nothing,
	listeners: {ctor: '[]'}
};
var _MichaelCombs28$elm_mdl$Material_Chip$Config = F4(
	function (a, b, c, d) {
		return {deleteIcon: a, deleteLink: b, deleteClick: c, listeners: d};
	});
var _MichaelCombs28$elm_mdl$Material_Chip$Action = F3(
	function (a, b, c) {
		return {ctor: 'Action', _0: a, _1: b, _2: c};
	});
var _MichaelCombs28$elm_mdl$Material_Chip$action = _MichaelCombs28$elm_mdl$Material_Chip$Action;
var _MichaelCombs28$elm_mdl$Material_Chip$getActionElement = function (config) {
	var click = function () {
		var _p3 = config.deleteClick;
		if (_p3.ctor === 'Just') {
			return _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(_p3._0);
		} else {
			return _MichaelCombs28$elm_mdl$Material_Options$nop;
		}
	}();
	var link = function () {
		var _p4 = config.deleteLink;
		if (_p4.ctor === 'Just') {
			return _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(_p4._0);
		} else {
			return _MichaelCombs28$elm_mdl$Material_Options$nop;
		}
	}();
	var hasClick = _MichaelCombs28$elm_mdl$Material_Chip$hasValue(config.deleteClick);
	var hasLink = _MichaelCombs28$elm_mdl$Material_Chip$hasValue(config.deleteLink);
	var actionElement = hasLink ? _elm_lang$html$Html$a : _elm_lang$html$Html$span;
	var hasIcon = _MichaelCombs28$elm_mdl$Material_Chip$hasValue(config.deleteIcon);
	var icon = hasIcon ? A2(_elm_lang$core$Maybe$withDefault, '', config.deleteIcon) : ((hasLink || hasClick) ? A2(_elm_lang$core$Maybe$withDefault, 'cancel', config.deleteIcon) : '');
	var isDeletable = hasIcon || (hasLink || hasClick);
	return isDeletable ? _elm_lang$core$Maybe$Just(
		A3(
			_MichaelCombs28$elm_mdl$Material_Chip$action,
			actionElement,
			{
				ctor: '::',
				_0: link,
				_1: {
					ctor: '::',
					_0: click,
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_MichaelCombs28$elm_mdl$Material_Icon$view,
					icon,
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			})) : _elm_lang$core$Maybe$Nothing;
};
var _MichaelCombs28$elm_mdl$Material_Chip$chip = F3(
	function (element, props, items) {
		var isContact = A2(
			_elm_lang$core$List$any,
			function (x) {
				return _elm_lang$core$Native_Utils.eq(
					_MichaelCombs28$elm_mdl$Material_Chip$priority(x),
					0);
			},
			items);
		var summary = A2(_MichaelCombs28$elm_mdl$Material_Options$collect, _MichaelCombs28$elm_mdl$Material_Chip$defaultConfig, props);
		var config = summary.config;
		var listeners = config.listeners;
		var action = _MichaelCombs28$elm_mdl$Material_Chip$getActionElement(config);
		var isDeletable = _MichaelCombs28$elm_mdl$Material_Chip$hasValue(action);
		var withIcon = A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p5 = action;
				if (_p5.ctor === 'Just') {
					return {
						ctor: '::',
						_0: _p5._0,
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}(),
			items);
		var content = A2(
			_elm_lang$core$List$map,
			_MichaelCombs28$elm_mdl$Material_Chip$renderItem,
			A2(_elm_lang$core$List$sortBy, _MichaelCombs28$elm_mdl$Material_Chip$priority, withIcon));
		return A4(
			_MichaelCombs28$elm_mdl$Material_Options$styled_,
			element,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip'),
					_1: {
						ctor: '::',
						_0: A2(
							_MichaelCombs28$elm_mdl$Material_Options$when,
							_MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip--contact'),
							isContact),
						_1: {
							ctor: '::',
							_0: A2(
								_MichaelCombs28$elm_mdl$Material_Options$when,
								_MichaelCombs28$elm_mdl$Material_Options$cs('mdl-chip--deletable'),
								isDeletable),
							_1: {
								ctor: '::',
								_0: _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(
									_MichaelCombs28$elm_mdl$Material_Helpers$blurOn('mouseup')),
								_1: {
									ctor: '::',
									_0: _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(
										_MichaelCombs28$elm_mdl$Material_Helpers$blurOn('mouseleave')),
									_1: {
										ctor: '::',
										_0: _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(
											_MichaelCombs28$elm_mdl$Material_Helpers$blurOn('touchend')),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				},
				props),
			listeners,
			content);
	});
var _MichaelCombs28$elm_mdl$Material_Chip$button = function (props) {
	return A2(
		_MichaelCombs28$elm_mdl$Material_Chip$chip,
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _MichaelCombs28$elm_mdl$Material_Options_Internal$attribute(
				_elm_lang$html$Html_Attributes$type_('button')),
			_1: props
		});
};
var _MichaelCombs28$elm_mdl$Material_Chip$span = _MichaelCombs28$elm_mdl$Material_Chip$chip(_elm_lang$html$Html$span);
var _MichaelCombs28$elm_mdl$Material_Chip$Text = F2(
	function (a, b) {
		return {ctor: 'Text', _0: a, _1: b};
	});
var _MichaelCombs28$elm_mdl$Material_Chip$content = _MichaelCombs28$elm_mdl$Material_Chip$Text;
var _MichaelCombs28$elm_mdl$Material_Chip$text = F2(
	function (props, txt) {
		return A2(
			_MichaelCombs28$elm_mdl$Material_Chip$Text,
			props,
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(txt),
				_1: {ctor: '[]'}
			});
	});
var _MichaelCombs28$elm_mdl$Material_Chip$Contact = F3(
	function (a, b, c) {
		return {ctor: 'Contact', _0: a, _1: b, _2: c};
	});
var _MichaelCombs28$elm_mdl$Material_Chip$contact = _MichaelCombs28$elm_mdl$Material_Chip$Contact;
